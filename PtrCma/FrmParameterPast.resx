<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>