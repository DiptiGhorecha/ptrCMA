<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tukcs64+BI/7qO+xBTvWAAAAAElFTkSuQmCC
</value>
  </data>
</root>