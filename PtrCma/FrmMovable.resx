<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>