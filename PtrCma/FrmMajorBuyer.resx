<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpGOTlBMzE3MERFNTgxMUU3OUY1MUQ4NzdCOUQ3RkM3NSIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpGOTlBMzE3MURFNTgxMUU3OUY1MUQ4NzdCOUQ3RkM3NSI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkY5OUEzMTZFREU1ODExRTc5RjUxRDg3N0I5RDdG
        Qzc1IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkY5OUEzMTZGREU1ODExRTc5RjUxRDg3N0I5RDdG
        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
</value>
  </data>
</root>