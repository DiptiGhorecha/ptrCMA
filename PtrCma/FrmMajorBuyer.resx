<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDpGOTlBMzE3MERFNTgxMUU3OUY1MUQ4NzdCOUQ3RkM3NSIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDpGOTlBMzE3MURFNTgxMUU3OUY1MUQ4NzdCOUQ3RkM3NSI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkY5OUEzMTZFREU1ODExRTc5RjUxRDg3N0I5RDdG
        Qzc1IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkY5OUEzMTZGREU1ODExRTc5RjUxRDg3N0I5RDdG
        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
</value>
  </data>
</root>