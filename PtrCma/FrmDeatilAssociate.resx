<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo0RTk5NkNBQURFMzgxMUU3OUVBQ0MwRTVEQUY4RDFEQyIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo0RTk5NkNBQkRFMzgxMUU3OUVBQ0MwRTVEQUY4RDFEQyI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjRFOTk2Q0E4REUzODExRTc5RUFDQzBFNURBRjhE
        MURDIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjRFOTk2Q0E5REUzODExRTc5RUFDQzBFNURBRjhE
        MURDIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQg
        ZW5kPSJyIj8+Tsl5CQAAD1FJREFUeF7tm92LnVcVh4cS/Qt6438g6pXQW73rjWL10o8qfqEiqFDQTtqm
        YAL1ztZeSGkadU5qZlJECAiCFkUL1YuKF4JgSznvJJmkyaSF2LR4pe+TZpUfq/vd78c5M+ck/i6ezJx3
        fey1115n773OmWw0TZO5q+WDLfe3PNbyTMus5fStn8YYY4wxxhizCPQWWy0/bflhyxdb6EHoRd7To+QH
        H9ptmkd2m/nspfN7p8/tXZ1tXX59duryG8YYY4wxxhizVOg16DnoPehB6EXoSVKP8m7T8r7zTfOJC838
        5AsXLp358ZXrs4f237rJw8YYY4wxxhhzQETfQQ9CL0JPQm9Cj6JNy5GLzfy+9ufJ7Uv724/u35htihNj
        jDHGGGOMOWjoQehF6EnoTW71KEduNi1tJ3PPbjN/6uze/s6xVsnfrhhjjDHGGGNWAb0IPQm9CT0KvcrN
        puV80xz/48XXdk7svzl78NrbRWNjjDHGGGOMOQw2257keNubPN/2KLtNc+J8M79745WmefrJK9d3ju6/
        7W9ZjDHGGGOMMStns+1NnrhyffvltlfZm8/v3Xjx4t7Wif03n0VQMjDGTOcbj534x5e/9vm9QGXf/tnP
        /6KyB174629UflB8/+///PW3nvzJ33Tsrz/0g3+VdE03mj/WuaRzu/Cd5371p6G1sPnq3s73fvu73we1
        uq3V/53ImDwugub0dqm9daiFw95z/9/q35hlQ29Cj0KvstvMH9g4d+nqzf98f7SgbMxhwYb+uY9+4L9d
        IOcSwCWpZL8IHGRc4oOSzlTyvFTGWCo7iLllOKS/8PGP/EfHDUr6NXL8sOz8rTM672VdSA6yFmvc/8mP
        /TvmQgxZTqNCPKqX+dJnP3WNSxpNcdjV6n8s0WwHh/F+GUstj5qHLlS/htosq/YWYUjdLrMWpkJsGsOY
        GlK7Groe6zBnY25n6E3oUehVXm2axzfOXL529tj+W1v+0zCzSvLmXgNdvRgtykEeLLVP2hY5QKfCxVLH
        pBEkjq9+95vzkn6N0gWWZyXdOxFd12V92o0vzWdJZ9lw4aytX63RLaF1vMxPmvGr43RdjldFXx419i6y
        TRdqs2hel8GQul2Hbx0Ou2lZhzkbczvzzn/If2tru+1VXtndPbXxy8uvP/eImxazYtjQdeOPy3RcqPOl
        idfLalzy2CWdg2CRA3QqOh4NTElnCPwZjPpSkJVsTD+rqMXatwNZDtQt37yEnLrlWegdVB2ve9PSl0fi
        B/Y2nUd8gzwmb2q/DpfhVe2hY1lkz1U7wFeJ0tobY6ZBb0KPQq/SNi2/cNNi1oJ86OXDhEsSzYvqdB3W
        HBrItNHhQsHlQBsdPkHOeuE3iL95xg57nqkulP4sJqh90sYBp37GHKDAPHNDF/PMviInOh52EdfYv+3O
        a6HUvrWJPzPKsRA3dsiyDXNBppdCwAf5LcU+JjcKaxhrpmN1/elTgEz9RL5zzMRDXMhVf0wtBjFGaY6l
        WiyBj7DFT5aTq5AD42UdhfXTOGv1D0PXlt/zt4TYhN+c/646wwfPtemCyH9AXtQHqH6mL48KPjUmXpf0
        IP6PTOgyZ+aq9l2xja2PmCcwBjrohj0/ea25G1O3+NTn4UOhHhgjrzX6ed3CXx475lh6n+fc1/aCjNpB
        SSdTm3NJFvPnNevHs1JtxvsmYiFfoR91qzlEN9ZB0RoPXSCH2NRq05jDwE2LWUvyplk6TNhg8wGlGzHy
        fNhlsA8bxijpKBHHEF31HeR5qWzqAco8s98SHIphk8fKDB0buMyoLYcs6LPSpYjc5PUroTbZbwk9WKfk
        JtCLZxc6lj5nTPU1JAbmFvpjanFsndfQOEsXFHyoXyBucjXWP6hszNr25VPzP6TOyB95DJucf/xlH6Fb
        oi+PCnL126U/JD+gc4ep9ZHl+lrR8cbUreYIwkcwZL7hC0ryTFzkg5x79deH2kFJJ1Obc5ZpEwJRFznH
        tbVhX6PhKMmw05of8j6B0DdmFbhpMWtJ3sC7DhM2ZdXTA199sBnHJ1L81M2ZTR19LtbY502eZ0FcvvGD
        HuPzO/ApaD5o9CKaYwKV4V9lXXPO5BwQQ8STLyvxp1rI83jMJ89zCHn8yIc+QyfbaZ51fSK2yGXoIw99
        iHkC82KMmEPYTMkNoKMy4sNv2MaFSsdSfdY5ngOvGTvPMV8SIu9janFsnXehc8ZOLzRK3wUYOXkvNTFd
        9T92bdHPl1p8R26Qo8ccNAfEhr/Iv9rre1VzETA+YwA+QzczNI9BjiPmqBCz6hCLrrPKiE9tNefEo3aa
        m1wf8TyI/JaaiUXrFnRs9FTGumncYcvrsGEuxBbrC/n9n+eYx1F/fahdDfVZm3OWAc+A+RMrevjLeswb
        eeyZCnNGBrreQC5jfF0zrRNQ36FvzCpw02LWkryBdx0mbKaqx2uec2HS57o5Qz7M4iCF2sFSgrFiY8/x
        4Et1a76zbdecM2rD4aYyLkwqz/HUZEPIl0K9FORDMF/eQhZy5p/nrOuS88MhygVFdbKN6o/JTT78Sxfw
        WPd4rfpduWRMbIib+eR6yPPPcpXBInWe0bGIraQDjEku1W8XjK+2XfOZsrbkSm1KMWe/2Z/OQ2t3iO8u
        huYxyDGWbHLe8jxUhm48X6Q+9Ln6hNy4jK3bPp28p+S9A0r1ATwjHuZKLnUfyuPk3Od51FC7GuqzNuch
        OYO+2qzNl5yoTG31+ZD92JhV4KbFrCV5A+86TPKhG5twPoz6GHqwBByijK2Hawl8qV3Nd465a85K3wEG
        tTH1eY51CLVDMM8nX5hKnwoGHLxcjPSQzBewDPHrGIvkRp/lZqcLtcm5JJYhF/285rW1g5zjPrpqSnNV
        ajBLcGlkjfrmpXnvms/YtYUp69tH2A3xXWJKHvMalsZSea6tmjz77kPrQ5/nMbNftYOcd5X16eTc58a3
        C2LKF/YS2UZleR411A7wVUL3sFpehuQMcn4YQ+U1PzXbsfuxMavATYtZS/LGWzpMuBDkQ4rLDzI2Y33O
        xQqfXYQd8Fpt47mSL2rx9Xw+FPCldjXfOeYhB2jfAQa1MfV5jnUIQy4JAbpqy/rlT2wzXPz0oOSi3Ddm
        XHIWyY0+G5qXLhtiVhnxE0tc+lWW17y2dpBrZkydK8jCRylPQyB2bPP64Dt0dBxQ+zFrC1PWl9c1wm6I
        7xL4GGuDXt9YKtc4++TZ95j6UDtk8bzkd2zd1nSm5D5/eIVv7PCV92q165tHDbWDkk6mlpchOYO+/NT8
        1Gyn7MfGHDZuWsxakjfefJiwweZPhrAJee0bgD76Do/8qXD+JFBlGhPUfE85QDlA1IacZB29CPK7ytQ2
        x9pHPgCHoHOKw4+15DnzJ5f54hprp4cla8AlF1npE8LQ12djcqPPuz4x55nGFPqguczxqa++Ne+rxUXq
        PNB17Pt2AF1i0nln1B9o3rvmM3ZtIY9TmntfU9jFEN8ZtRn6LQvkGiiN1VePaq+1t0h9qJ36hBxzzmtf
        3dZ08vs2j616kQdyEvo0KapXi6VvHjXUDko6mVosQ3IGfbVZ81OzjfcgOUUPWW0/NmYVuGkxa0neeOOb
        DOAio4cUcFDpQc7vqsPv2ObLEc/0sgp5bC5QPI9DMm/8xBNj50sCvmq+VUYsKht6gGaf+OE5MeVLW8gC
        leVY+8gXSnwTs5LnpBdYXhMf+dW1yzYRMz9ZK37qJ8Ksi36aylqHbGpu+F1l+NcxiZlnaqP6msscQ6wr
        cXfJumxzLcLUOg90DJ1PCeIL3Vi7PJauBeifdeX5xPOIj59D11ZjAXxHHYWPrMMYud7QYS5am9muLy8w
        Jo/AGDG2jsXrkIVu1iHW0Cl9yxB2i9RHl09AX+UaK+R1znVb0qnZM/+IGXtqirnEuKrLPEIXOa9VHmNA
        3zxqqB2UdDJj5qwyhRhVL9dazU/NltfkOb8/co7yeMYcJm5azFqSN94a6OomG3AY64FdQ+3yJq3EoZYP
        wi6ITX3XDpQ87tADlAN6yDy5/GVbledYazCm2uYLj5JzFRcKfdYFMcfa1tZF0UvyIrnJF8USeoDrc81l
        bmRr5DUfUotT6zxsVR5r00W+9PSRv4Xsqv8pawtd856Sf7XJ89R1LjE2j6D6XYTu0DqG/D6eWh/6PPvM
        6zWlbrtqAXjP5+a3RPga8l4NdJy+edRQOyjpZGpzrsmUvtqs+anZ6vMudD82ZhW4aTFrSd54M8g5qPoO
        GQ579LoObS7UyNWGTbnrEIzxuAjkyziv+ZRKnxGn+q4dKIscoBFzaZ7ElQ+2QPVyrDXyp7td/iHPKy6y
        xJtzGDAP7PSAJB+1ukBWytnU3AAX3q7LE891PJXlXOZ8ATHl5zn+IbUIU+oc1HdJniEe8lVbB4hvArJ9
        tovn6E5ZW95vpRrK+cc2fzOosJZaB+irvFYjMDaPoP67UP2pew5MqQ+VZ5/kQ+V5bYbUbV5vtQ8fjFNa
        X2A9ozlEN/uLPaQ2Tt88aqgdlHQytVj68hH01WbNT82W9erKdWk/NmYVvKdpOXP52tljblrMHQgHHJt2
        0LcBI1f9OCAVLhLI+JllqyJi6op53RiS54zOEUo6JRbJjY435fDWeY61H5MjZKrbNRZ6ejEZmw/IYy3j
        fTBlbcfYTK2dLpaRxzFE/FNznddsSi0PZUzd1sh+SjqgcyvJTT/LWjNjDgJ6E3qU7bZXaZuWUxvnLl09
        8+j+jdNHk6Ixxpg7B/0kPH/KbobjPBpjzOFAb9L2KLO2V9l+tWke33jx4t7Wif03n93cf7toYIwx5vaG
        T1P5M5LAn6ZOw3k0xpjDg96EHoVeZbeZP7DxStM8/eSV6ztHW4H/RMwYY4wxxhizamhanrhyffvltlfZ
        m8/v3dhtmuN/uPjaTtvJzB685m9bjDHGGGOMMatjs+1Jjre9yfNtj9L2KifON/O7Ny4083vaF0+d3bu2
        c2z/hr9tMcYYY4wxxqyEd/4D/o0ZvQk9Cr1K0zQbG+0/Ry428/vanye3L+1v8x9eNpOxMcYYY4wxxhwk
        9CD0IvQk82b35K0e5Ug0LfD+803z6baTeebPFy6defzK9Ztdjr91McYYY4wxxhwk0XfQg9CLtD3JqbY3
        +Qw9yq1e5d2mJfjwbtM8stvMZy+d3zt9bu/qbOvyG7NTxhhjjDHGGLNk6DXoOeg96EHaXuRhepLUo7yn
        aYG7WlD8SsuPWk61zIwxxhhjjDFmydBr0HPQe9CD0Iuk/qTZ+B+Dhx0laouAnwAAAABJRU5ErkJggg==
</value>
  </data>
</root>