<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo0RTk5NkNBQURFMzgxMUU3OUVBQ0MwRTVEQUY4RDFEQyIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo0RTk5NkNBQkRFMzgxMUU3OUVBQ0MwRTVEQUY4RDFEQyI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjRFOTk2Q0E4REUzODExRTc5RUFDQzBFNURBRjhE
        MURDIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjRFOTk2Q0E5REUzODExRTc5RUFDQzBFNURBRjhE
        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
</value>
  </data>
</root>