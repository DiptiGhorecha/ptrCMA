<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4gAAAAfCAYAAAClO+OoAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDozMEQ3RDk2QURFNEExMUU3QjcxQ0NFNUFBMTU0RTI4RiIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDozMEQ3RDk2QkRFNEExMUU3QjcxQ0NFNUFBMTU0RTI4RiI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjMwRDdEOTY4REU0QTExRTdCNzFDQ0U1QUExNTRF
        MjhGIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjMwRDdEOTY5REU0QTExRTdCNzFDQ0U1QUExNTRF
        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
        gg==
</value>
  </data>
</root>