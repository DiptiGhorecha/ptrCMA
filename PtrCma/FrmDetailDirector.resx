<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>