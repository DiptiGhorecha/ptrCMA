<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>