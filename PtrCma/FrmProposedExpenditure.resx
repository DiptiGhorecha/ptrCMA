<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA3UAAAAfCAYAAABAieSBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADtGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9i
        ZS5jb20veGFwLzEuMC9yaWdodHMvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAv
        MS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNv
        dXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wUmlnaHRz
        Ok1hcmtlZD0iVHJ1ZSIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAyMDYzMTI0ODZD
        RkU3MTFCRkEyREE4MTBDMUE1M0Y2IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjJDNUY2OEQ2REYy
        RjExRTdBRDM4QUY5NDIxNjY2QkNDIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjJDNUY2OEQ1REYy
        RjExRTdBRDM4QUY5NDIxNjY2QkNDIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzYg
        KFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6ODE4
        QUVENDJGMEQ4RTcxMUE3NDRCQTQ4MDY0ODUzNzQiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6MDIw
        NjMxMjQ4NkNGRTcxMUJGQTJEQTgxMEMxQTUzRjYiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJE
        Rj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz5CYxhxAAANT0lEQVR4Xu2cz4+kVRWG6z/Q
        BSz8E0jcaKIbEkncsDHuRY0xatSYgMmAMIxsEBAIUWaIETeDM93THaYV2JgYlETEBUYxLgwmQqC+6qK6
        mW4gA8N0XOl9Gg55OdzvR9XMdDfT7+Jhqr7z495zvlud8/ZXzahpml3WC5P3Xxc+UbihcEvhZ4WTheXC
        kjHGGGOMMcaYK8rpwq8K9xduLqDN0Gi7mg3txuvggxfvi7prJs34pmkzfvSlZrL63HRz+YnZ9tKpzTeX
        Tm6+ZYwxxhhjjDFmD0CDocXQZGgzNBpaDc3WKuqK8TOzZnz3i5P1tbMb26t3b727dOf2xaUfG2OMMcYY
        Y4zZF9BkaDM0GloNzYZ2+4ioe60ZX7/ZvPrAs9ONsw+de3vljjfeC64lNcYYY4wxxhizd6DN0GhoNTQb
        2g0N94Gomzbj6zbG4/uemW6uPXjunSLodk4fS0mMMcYYY4wxxuwfaDS0GpoN7YaGQ8utN+MRT+lu/fv6
        7Mwvzp1fvb04Hd3eqSYxxhhjjDHGGLN/3Fm0GsLuRNFuz6/PVoqou62IumtHzXh8Ymnzzcfv2r54xoLO
        GHO18d2f3vOvb377q7Og5tPFj/757ye//8iJf2iO7xy7/T81X2NAzwrnr+ZjLh9H/vLX32nPf/DYr59X
        u9p8P4wxVwNotmNFu50qGq5oueOz8fjG0QvT6cnjW+dX7tjeWUb51QKNMYcHBp+bPvup/ykMTV1+vM72
        g0Kup+bTBnV/7YZP/1fjF8lzpUBs1vamUD9+R1+ZPV7LYS4/uf81nxo//P0f/qixXRzkz9xek/vGeVe7
        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
</value>
  </data>
</root>