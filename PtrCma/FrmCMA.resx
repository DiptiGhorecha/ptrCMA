<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblPic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bvlfiv/uLbPCAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="picFrmClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAdCAIAAAA7LeshAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo2NjQzNzNBNEQ5QTIxMUU3QkM5NUFEQTc1OTNGNDU0MCIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo2NjQzNzNBNUQ5QTIxMUU3QkM5NUFEQTc1OTNGNDU0MCI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjY2NDM3M0EyRDlBMjExRTdCQzk1QURBNzU5M0Y0
        NTQwIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjY2NDM3M0EzRDlBMjExRTdCQzk1QURBNzU5M0Y0
        NTQwIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQg
        ZW5kPSJyIj8+bsV7wAAAAqVJREFUSEu9lVlvElEUx+fzqtHELdFPoPXNLdEH9zdj3X3RJ7WllWoFyygD
        ZViFogVmBqrDLPUHFy/DcEupMU3+JHO2/z3nnnMP2pGl5H/EodCdXPl0JZN9U2sYlt123V++D/hARIkJ
        h1iIgILu5rf8pu0QX+72lrd+PDLL93Mm4AMRJSYccIsFggm6sx/W3zeafhimttvXdOPUqiIFlJjS223c
        cCYkah3TnU+mOLPn+beym8cTa1KvxInEx9tGYcfz85ZDoNSP6M6srhfsLrezkNKlbV8spPWO2y/Yzum/
        dQzoji2vkbbT9y6kMkI7Py6m9K7nva03IUEc0HGp4e4uyUunA+GOUSBcdEaj5abT3Wh1jkY8SPZ5qSrF
        GF6Ua+8aTSkSqLct7goqjSFy/eBqxpBm8LJcC8LwqYrxWalKT3GIKq/rhhsElzNZjbEsOb3psVwsVgh7
        UqxElYJr0ZxQAsKZx9e1upazbIYzZhYgO3KUjIhwKVMGia2fvBmN4WDcYzaJx8WKF4Q4iI/pvCSopvXb
        1Xgx93JmzBYFXOQIHhb2PBXwCqHan46M4KLMGUWAEd3sYrk4USykHk2Y7EwUo2JntII+khe3JkTRmb1a
        sdIctoJBocfTg0Je04MimisPkBgNSrWuHuNXle8kEuMSEDmqx3gjO3xkdvyR8YaoVIoxYFI9Mgeq8Qrg
        JUuPA+HucAXc+DpcAfzYLZzGnmHbSKc5oVhQgP1HtuxCNqLQzINLad3q99nh8m9gRAfEcmdfUzW7W+qV
        wAG3HX+w3M8lP0v9mA6w4qmacf3S6tAsubKjwAcTrcONGhGj1gk6AS6VM3kxlW6PPcG4P8ibgA9mFSUm
        HMTdx6CgA7ScXcj+Mjo2T4d4wAciSkzTYy+gpvtHLCX/AAl0Z63cc9mQAAAAAElFTkSuQmCC
</value>
  </data>
</root>