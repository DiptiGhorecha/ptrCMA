<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>