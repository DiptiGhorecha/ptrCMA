<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>