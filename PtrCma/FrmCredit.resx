<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        K2nwP+2U/qqTk4RfAAAAAElFTkSuQmCC
</value>
  </data>
</root>