<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>