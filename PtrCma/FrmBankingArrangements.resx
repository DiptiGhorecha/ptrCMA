<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>