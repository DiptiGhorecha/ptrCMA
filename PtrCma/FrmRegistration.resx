<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo2ODcyQ0Q2NkRFNDQxMUU3QjAwMURBNTExQUNERkEzOCIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo2ODcyQ0Q2N0RFNDQxMUU3QjAwMURBNTExQUNERkEzOCI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjY4NzJDRDY0REU0NDExRTdCMDAxREE1MTFBQ0RG
        QTM4IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjY4NzJDRDY1REU0NDExRTdCMDAxREE1MTFBQ0RG
        QTM4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQg
        ZW5kPSJyIj8+a58FLgAAEFhJREFUeF7tXd+LXVcVvpTUv6Av/gdSfRL6qm99Uaw++qOKv1ARVAhoJ21S
        MIH6ZmoepDQddW5qZlJECAiCFkUL1YeKD4JgQ7hnJnNnOrnTwtgk+KT7S7Nkudw/1j7n3HPPJN/Dyc3c
        s8/ea6/17b3Xt9fa506appmY66Hw9wfC9WS4ngvXS+GahuvSvU/8nxd1QAwQA8QAMUAMEAPEADFADBAD
        bTEAbrERrh+H6/vh+vw9DgIuYvnJxH7x6HbTnN5uZtM3duaXrs5vTjf2356u77/DizogBogBYoAYIAaI
        AWKAGCAGiIFeMQCuAc4B7gEOAi4SSMujlrgIaXl4p2k+dqOZXXztxt7lHx4cTZ9e3L57PcOLOiAGiAFi
        gBggBogBYoAYIAaIgSVhQHgHOAi4CDgJuEkgLg8LeQFpObHbzJ4Inxc39xabzy5uTdeWJBAJEEkgMUAM
        EAPEADFADBADxAAxQAzEMAAOAi4CTgJuco+jnABxmQQm81gIxbxwZb7YOhMKMbpCEHEiIQaIAWKAGCAG
        iAFigBggBlaBAXARcBJwE3AUcJW7pCWEXs7+fvetrXOLd6dPHd5h2ItRJmKAGCAGiAFigBggBogBYoAY
        WBkG1gInORu4yauBo4QzLud2mtkjk2tN8+KFg6OtU4s7jLIQnCsD5yqY/DLa/Npz5/72xa98di6XbuOb
        P/npn/S9k6/9+VfLkMHW+d2//v2X37jwo7/otr/69Pf+MUTbQ7eR0//QsgzZHrCk7QusDdn+/dSW1iPw
        NNa+YVx/59e/+a1c+LtvWY+LLvru95D1feuVX/xB9Hy/zstD6pNt3V+RobXATZ4/ONp8M3CV+Wz2+OT1
        3flGiLK8jBs09v1l7DHbE5P0Zz78/n+nLtzHBI4Fue9+wKGDEy9Xn/Xbfum60Z7u7zL6ZvsCZ/ZzH/3Q
        v2J69vQ7ZyPcQ93o81ic5Jz+Pf21ZTROVtVH4ETLEXNOUUbbCuXb9HeoZyyuYu1aWw4xXiCHlg0yDKUT
        TzuwPebF1JiG7JC5L/uPWReluSl2vy+9eGzlLfPkxz/yT5FVzzFf+PQnDj3rxdr1+ZbFA77zth8r55lz
        utTPZ+lrejEAbgKOAq4S0sROTq7u3bx7+P4UowwkbQNioERa7GLZ5y5i346tHny5nf5VkBa78MHhgRxf
        /vbXZ55Jo8YxGMMuYd+RljE4bR7cHLdIC0lLvdMCh7ZmPHrGd6nMGPCfkrFGF1J2bKRF2xTkRffV2js1
        v3rLlWy96g22GvlYtn7+OK46AzcBRwFXud405yeX9w+vnFnc3uAB/AcHBGMAryUO4kyLQ213jvB3X8Rl
        maQlp1uP89m3bfTCDgJTW791DHQ6Cvpj7bSqaERtv7zlx+C0rQI3Xv20LUfSUrfeYO7TOsO4Q1qR6B87
        6xibOgrT1jb6uTHgP9UPHX3E/9F3LS9IgC0zVLTOq/tUlEWe90RQ7MZUH2nH9+Oc47UJy9XNTcvW13sH
        8m9vbAaucm17e33y8/23XzlN0sIoy4BRFoC8lPqBRRjRAM+iKWdF9ASPxQCLmCY6shttF4LYORNJw4hF
        hLBIYEc/RqKWGWlBP6GTWD/tYiw6sY6O9NW7sJWcS/S3lJYEW8qZGkui8H0qlQF90AuyOCG5PPtSpAV6
        gg61syApNXhW9FLSn04biskjtsI9qbMNpvC8lRU6kTaFJHoiLeLU6vqAJegjRTZt32x6Ep7HOKtNRynh
        qjRHxPortpW6BS+pRVXOEujyFs+p9DDvnCNtezGSc9BL40wTGLsrL/JaLJXsX5p/24zt1DOQDVhsGw2x
        KZK51L7asSjrUe5MosUk+pIbFzpCAjvEbG/Jg9UN2szZSMaEJTYy58XmX++cs2xnlfWPizysyh4gLeAo
        4CqBtPyMpGVgZ31Vhh9buyXSAnljubra2cb92GRsHXV5xi5qsfQCcf49ZbHQWOd/GWda0E9POp0+NGwX
        u1jExIOJknNZIi25MzVSN2xoF3dPf2Xh1f3I6d/uxMbsL05BSX94Vtq1u7upXPQ2mCqlwIi8pTMt1k6x
        eqE7awc7llLy1J79KOGqRFpsf3NnPGJOsAcLMXzVzjm1GPGSFvQXNgXx8kSgPeMpln6Uc4jbjG3PM3ps
        eeYoKVNDWtqMRSs7SJaMF3zazYDSxpC2SYqo2QibTSGzOLabD555zM6/3jmnxjYsSwLSFgMkLSQpo4gq
        eUgLQJ5zinUdWMQxYWMxwqeNRqAueYuW3W2MHXJGPSiH9iUlCg6Cjf7YhX4ZpMXqADJAJshjHWRJGZGD
        lKl0CY+jA53lnEurZ+hcO72WdEJWyBeTTevRLrR4Tts250il9G/zvkWHokfoWO/Ml/SnnQyrI3k5gexY
        aiJci6lYhEqnUqZItpYPOrcRLrGDxbN9W5btG/oUS8VBOS+mSrjS0Qndvo4mxpxO0YvFgHX0rD5wvw2+
        PHNOjLSgTymMpBZ26DZHzPTOecwO0IlE1GQ+i6V32mdTY63t2LaOvehdxpvgsY2DU0taasciZLLEBXMT
        dKbn4dhmlu2PltXOm7asHaMyDqwNYtEa2Biy4VPsbiPYsLEmO945p42N+AzJSy0GSFpIWo4VaUmFx21Y
        3O4wWUdfL8Y5YhEbUGhLFlUrj91hXgZpsQ6nlhELV86Jz93zTB6lXTe5DwfA7ixaXVmHyKZ+iTyWVOZ2
        /736t7LAEYjtUnudNq27NjquwZQnvzwXabGYtPq0xNfbN7vLq0lFCVt9R1rsTrXFUC4a57V5lzmnDUas
        DoHXEnERQpRK95OzL6gr5pxaG6bkbju2beROnGnd1xryq5+rIS36uZqxGCMu2iYewoI6PFGWVARJNnjs
        RkwprU6TVTt27bOeOac0xnmfBKUPDJC0kLQcK9KSirR4wt6pXVoPacHijrZLToLXacbgbbMQlNJ+7AJo
        Uyu6Okse0hJL74rJVaortisdSztqE2mxDmcsghBz9Dz685RB39piyoObHE5K8uXqzz3rkSu1aC2btOTG
        eEkfXke9hGdNAEptehd3YEjOS1liZuXRmwiQpZRKi+e9pMWTbqblkf7ZqIEuEzuH6NULytWQlrZjMUUk
        hCyWUsKsnKUoS24jx9ozRvbwXU7non+SFhKMmrE2ZFmSFpKWY0NabJ4wJlhZFGIpRPqQpP2/Xkw8pCX1
        quDSwth3pGVspEXSqTxvDbO6yNlHk5OSg9eGtGCSxe5yydHLpUelzm2U5JUJvi2mPOSApOV/f5dmCNKi
        X4gQw7aec7wYqXUGJHIS22ARRzSWDod7+L4ULUvJ3XZsQ97SeaK2b4oszc1at23HotQRW5u8ctdEWaQ9
        OwdYHcZeYW9TCuUcFEhvKoMh1V5NFLUWwyxPwpTDAEkLScuxIC2lt4fVhsb1oCiRFrsrX+PI9k1a7EHM
        2OKkHXGbv9/VWUrtiMfOFNhIRckhSk1UuVd4ltLhUvq3b5GT9JjYLqSWy6M/T5kumOpKWuw5Aqt3ayet
        q2VFWix5tE5R7CUcWq4Smc+NQ6sPb/phlznHg5Hcwg0MYB7KvY0q5YhajOs6SthKyd12bIsNhWxJv2Ln
        DGudWS9p6TIWJWKailqlos6xCI03yiJt5qL+MVJhbatfkV0aPyVc1NqG5UlM2mKApIWkZZSkpfQ7LXYx
        iB1CxERrnVN8Zx1569DIZI5nZTHVi7V+daV1XJadHoaBbuWVHdTYrqUN83d1lnJpPFYXOhIWS9eAHaBr
        7TRh8YTtNRmLpf7JTraVx6t/wQE+9Q547BBtirTondTaXXTrJNRgyupDSDT0KHjPOSGxXVqxgb1n9bks
        0mLb1YfaYy+YsHKVnK4caYntUku+f+6Vx13mnK7jUPQlu+WQV4+j2HkXwYbVhTi4uJ+6J2MgJbfVv3ds
        oz7o384DpZ1/j8PjJS1dxiJ0bg/dW93niEubKIv0PRWhsutbKlqi143SWx89c47HJixDstIVAyQtJC2j
        JC25/HBM9LEdRu/rM1G3Hjgxp1jalwW9lEYk5b1OM9pvu3vleXMQ5In9eGRXZylHWtAnu/jZg6gxYhOz
        dUmP8ozdbSw9l1rAU3iz0aJcPnjJsbOTdVtM5c7jiCNScuI95xli6S3LIi3W+cuN/9jh5lJ/c6TFO54g
        k8VX2zmn6zjMzVlWd0IABX/eMYh6vGdaULe33lTqZ8rmpWhFygnykhY832YsxjArmxext4rZNcuO49oX
        Dtiou+gv9dKFVPmY3u1ml2fO6eqM8nkSGg8GSFpIWo4FacFCh52lUi4tJmb9K9B2QpbDnXpw5PKqpT1M
        2nZhk93EnAPSd3qYyC0yx1IE9Kt67STQ1VkqkRa0Z3cArZMJneacf3klp5UdizHqliiLRNLa6B8yWNvY
        emJYAw5Sz9WSlraYEsIbs72XtEgdMWcN9aZ+IHJZpEWTyZQDmZOrC2lB211s0WbO6ToO0SY2CHLkU/QV
        c4Zjv9MDm9vva0iLRFNrxjbazNkbeM6lwOWcnBrSUmv/GGGxZMGSOEu+9DwZ+00cjwNn56JSipl9Lb0Q
        cU9kC2Vyc45HXpYhMemKAZIWkpZRkJauQI49j8Va0jxs+kSsvKSCyTOxxV5eh+l5K8wy+hSrU2SC3LW7
        dUPJmGpHy54jpCgXc148i22pj14ZdD212MrJ0AVTGt9tMan70raOko5r73vGYm2dnvJdbIH6+8SFR14p
        YzHsmQe0jtsSAw+uBaO5squyt5Wpq/29NrNRD4+9vHV7yuXWuNLzfcw5pTZ4n+QmhYH/Iy2X9w+vnFnc
        3sANAoc6IAaIgTFgQHYUsSsrkRa761faZRxDPygDxxMxQAz0EWUhjoijBxED4CbgKJuBq1zb3l6fXN27
        efnZxa1Lp0haSNqIAWJgJBjIpXJJisNYogQP4kLCPtOBIgZ8GEBUSTZe8Dl0lIV28tmJehqnnsBNAkeZ
        Bq6yeb1pzk9e351vnFu8+/La4g4dtpE4bBw84xw8tMtwdpG0G6SD6Qs52iQrw9mBmKeuiQFigBggBlaF
        AXATcBRwle1mdnJyrWlevHBwtHUq3GCKGIG5KmCyXWKPGCAGiAFigBggBogBYkAwANLy/MHR5puBq8xn
        s8cn201z9ne7b20FJjN96pDRFg4WDhZigBggBogBYoAYIAaIAWJgdRhYC5zkbOAmrwaOErjKuZ1m9sjk
        RjN7LPzxwpX54daZkDfGaMvqDMTBQd0TA8QAMUAMEAPEADFADDzIGHjvAP6tKbgJOAq4StM0k0n458Ru
        M3sifF7c3Fts4sDLGs928HwPMUAMEAPEADFADBADxAAxQAwMiAFwEHARcJJZs33xHkc5IaQFxOV9O03z
        ycBkXvrjjb3L5w+O7kZcGHUh03+QmT77TvwTA8QAMUAMEAPEADGwfAwI7wAHARcJnGQ9cJNPgaOAsGjS
        cvePcH0whGFOhxP60zd25peuzm9ON/bfma7zog6IAWKAGCAGiAFigBggBogBYqBnDIBrgHOAe4CDBC7y
        DDiJkJUUaQFxeehewS+Fzx+Eaz1cU17UATFADBADxAAxQAwQA8QAMUAM9IwBcA1wDnAPkBVwEQmo/Pfz
        P+P//oFbLTFPAAAAAElFTkSuQmCC
</value>
  </data>
</root>