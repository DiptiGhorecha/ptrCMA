<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>