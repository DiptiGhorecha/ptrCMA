<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA3UAAAAfCAYAAABAieSBAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAOwAAADsABataJCQAAEG9JREFUeF7tnM2PpcdV
        xvs/gEW84E+IxAYk2EQiEptsEHsMCCFAgJASJCf4i2yMbewogngiRNhMMtPzIc+AnQ0SCkQihIURBLFA
        QcKRfW93p7s93XbkZDwjVuT9jX3Cw5N6P/t7/Cx+nnvr1Dl16tR5q+rce9sb6/X6AdsdWx+87viJjo93
        fKrjzzoud1zr2AwhhBBCCCGEcKJc7firjhc6PtlBbUaN9qBmo3bjdfGjFx8UdR/ZWq8e3VmvvvT6euvm
        N3f2r72ye7h5Zf+dzcv73wshhBBCCCGEcApQg1GLUZNRm1GjUatRs/UWdZ3wZ3bXq2e+vbV9+9be4c1n
        Dt7bfOrw3uYfhxBCCCGEEEI4E6jJqM2o0ajVqNmo3X6sqPvuevWx/fWbL35jZ+/W5+98/8YTb7+v3DIa
        QgghhBBCCOH0oDajRqNWo2ajdqOG+1FRt7NefXRvtXr+6zv7tz935wddQXf/6tNmJIQQQgghhBDC2UGN
        Rq1GzUbtRg1HLbe9Xm3wLd2n/2179/pf3Hn35uNdpycP7zeNhBBCCCGEEEI4O57qajUKu0td7fba9u6N
        rqj7TFfUPbKxXq0ube6/8/JnD+9dT0EXQgjhNPjN3/7V3eJ3//TZ/1QZ71WusvPEk2/svvz7X7z077/1
        qd9bla+8/qP/+K9XW/3Dw4fmqedxOBnOa8z/4MtfeU19e+yf/+VvW/1COA6o2Z7uarcrXQ3X1XIv7a5W
        n9j41s7O5ZcO3r3xxOH9a1R+LcUQzgo2xkd/9qf+dwot/dOm5dcYXApbth4G/vDv/v4fdK6sZ6tf6Efj
        5/zax3/6f4gpF5uTKCTIzYILS6vPUnQenhf+3KvsvEBB9xu/8stvq58Fed/S6YP4uo2Lui8wd82b0yhw
        z2LMQtfsvO1vfMCg/sHDUGjofM5TzMk99W3uPhDCHB58W9fVbtRw1HLb69VjG1/bfevmCwd3r3eCB7/T
        bCmGcFb45W6Ilv5p0/JrDA6Clq2HgRR1R0fjNwbFHcVGy84S1PZxrx32Cv+0nTYdW2XnBXxWH/GZZ/l3
        nn78v+denH/9l37hB2oLaGv1Pe+cxcX2LC/TOi450OpzFlDYqm8F+dnqf5GofQPO0zd1KerCafLgb+u6
        2o0ajlrujfX6Cxuv7h3cfvbg7rUnD/M/SAnnDzZt3SQ5kNg4W7T0Txv3CX/Vfy5q3udh3vhT1B0djR9o
        7vjzAXx71LKzBLV7mmvn82r1OWvcx6XF9Cdv/80/qR0FWUvnPENe6hxS1J0N/qGDcpwf/IT/4yzzMHz4
        oGajdnuuq+G+2tVy39naurzxyt7hX//JwXtdUXcvRV04d/jFac4myc/F+PkJP1ErfYoqCq2WHT5dZ7wC
        /fqbmWpznTEYR/2fYqN+l9/yu/WzovIN6lPLmjtt9a1B2S1op01/QoZOxYaxGLO+RcAf3s+5ECyZf4Gu
        jl8+4CN+t3Rqjqozptdad8amf+ljjzxw3dNA5wEux3//GWDLV81l7Ysu7bquFUftRww1TtW3YtX6KSL9
        3HahtuZ+U1dj+jqXrcr5qczJtcoX5D42tHJsCM0zB1lLp6h1Ul9qnVpxXxK3lk7FBpn2xY7bJi9oB41N
        Xz6ij21karuPOWPCnLWego7LeMQQ+7UmjNP3DMCc+M6hxm8xFtuKkT/TzK81Fz58QFb9as61BuDPOO9V
        rrJ6xgpfF5VNsVvz4X0rH+bGn/l7DtEf+/UejrJ+IYzxflF37yo1HLXc61tbV1LUhXPNkk2SDdf1Wvhh
        gG2VY8MPRu0/hZbNVj/A79bFWMEfv3ipnEPGbVTMOGS1fezQ75MPzcGZM3+FtVG9FtjyywVtrb4Kh7Hq
        uI9jcVHd08B9aPVpzUHl5MzQvIC8qXh6rrQo21P6qu1C5Z4Xvo4qY/1U1mLOOs3NNY+1M2ds/4kcc/P5
        tT7ImbJXQD37sCRuU3T0ktySK2V/Sj5C2R2ipafonJbuK0Oo7tCcPMdhbnyngo7b0AKE1y09mOLT3LyC
        Oc+4P2Oelyobs0uxpe/V1pL4T81d0DiFcNykqAsXDt+g+xg6uOsTNz5N9IuQ/rzJDxLg8MMH8IvyFNym
        H0CKzpWxOEzQ5189RPxArvaCvuUzfetgIUbej1jR3rogoo+sdRFqXTRbzJl/4T9HwzfasOUHNL6pLvbp
        U7ED5qDxA/XffQQOe/Swp+1Dl6GTQseHVh/wNazinwuqzl/j6TnBvNFpyZg7bUWNy2ts8m/FnPi7P345
        Upnnhce92rGh7fVsA3MiH8pPtdfHklwjd7DPOCqnrWLg4/Thz1bNRds8x8Evox575Kx5+bIkbrxWnRqD
        /r629TzRx9eunqXSp5/GDj/xr/yhX8W+fBli6phL1noKqgfYYlxs+L7DeKVHH5WVr0PxnYrq4wN7gI+n
        vhTeBzu1Nvxbce6LKeuq/VU29RkH9FWGXypX2Zjd6gPMp2z5XHk/Jf4uI9fQAx+bttIL4bhJURcuHK0N
        uoVu+trOBqz2ONxUjv2SjR0kS3CbOp7CBVz7cSCq3C9/eshoe5998ENMDxzsqczt+CVy6mE1df4KfVTH
        PzX3Q1VlBTqMzQHNvN2m+u8++rr75V1lQ6iOMyUOheu2+kDfHH3d/YKo8WSuKlO9KT4zJjCm54zHVWVu
        2+dS7T4XLtCssc/J3/fh48zJtT4fp8JYeunX2HvR43752OwPxF378breL4mb+sZaaj+/zOt+5WNVHioq
        Zxx0vN/UNYQpYx5lrYdQHcZQmcdJ47g0vmMwd9Ut28RT291X8Hz0GIHmjcfU10xlPp7rqsznwPqqXGVz
        7CpL4t8X22JKHoZwXKSoCxcO36DZRNk4ndo8xw6Dls1qn6I7F7fpB1DBWNpvDD0stL3PPvgYagNU5nbG
        dPuYOn9lrP+QL7z2y1kL11GZrzs+qFxlQ6iOMyUOheu2+oDPu76pc//HUJva3uczFzn/pqOFx1Vlbrsv
        5v7hh4PenAuw67p8KNf6fJwKfqq+xsfH9Tm5XOGyynqor3Pj5s/EGEO+qx/FUL5QTLDPH3dRp/K5az2E
        6rTstuRHie8YxE51dR6esxpj92nKt5Xaf+rcC/dFZe6Lz19lc+wWS+M/liNLcyiEJaSoCxcO36DHNsmx
        wwD6Nv0punNxm34AFX4YcEGnbx91YQfVQ6Z2lbEDR2VuZ+lhNXX+ylj/Pl/801Uuh/Slfeii4z6iUzLA
        B5WrbAjs9LG08Ogb3y/tXOxL5v7zfgi163oqAy6F+ok3r7kMMj/mqfq8V12VuW3eq1xlrKd+k9ViyoUU
        VKc1P5+D5s2Qj1MYm4NCX9fHN419C2JV/efEzZ8J9JhvH5rPQzEr+AbIn0mHuU0t7KaMqXJ8dvkUGy1U
        p2W3JT9KfIcgXmp3DNagdN0n4qG2W2h//Jwj573KVTbmi8rm2C2Wxn8sR5bmUAhLSFEXLhxsqHM2ST/U
        +ETY++jFhtfVPnaQLMFtMp9WPw4N7TdnbNXrsw9jB47K3M7Sw2rq/BVdHy1OCr8M1sXPP/3Xnw4N+e8+
        euw9B1V2GujYrfEp6PxbOp3DUEE7huq11s7jqkXEWFxV5rb7Yq6XfObNeNhtffNT/YZYmmtwlLzw2ExB
        1039oL2KaM+DiuvcuNFf21pr34fnRCvfyh+eUeToUFDqegDtrttiyphHWeshVMfj5B+2VNF8lPgO4XEY
        gzjUPjnVJ/qVjsdU91wYssd7lasu66cyzwOVjdlVWbE0/mPn9JQ8DOG4SFEXLhy+QU/ZJF2nNl4ODT+4
        dVMeO0iW4Db7Dg9841CsfrxmfL1YcEGgjYNUdafYB3S1r8dSZW5nTLcPnz++Y6tF2eS16rBmdeC7TP30
        dS97xLBPBu4jY5QMXFdlp4GODRUvcN+AeKl+aw241PslCj3/EET1yMnKR3KRf309KnbY5gLbkhUq03WE
        vphjo3KofAD80oIGX0s2hPs/NdfgKHnhxRRjsQaKj69rw9jAJdP3iJYOtubGzefHerou46OPv9Xuflch
        Q1zLV9qJteeh6/K+ZENMGdP7zFnrIVSPWFQ7sfIiW+O0NL5D6BkClUsK89Y+GmP3ib4VP2KFP4yBHdrc
        FvlW4/jz7zH1Z6B0yQn3w/NAZW7XdVWmeL8p8adNdYgFfZBXX5WXXggnQYq6cOHwjXfKJsnG64dbCz2A
        Adsq94NkCW7TDyCFA2WK36B62j5k3y8uHkuVuZ0x3T58/kNovP1wbEGs6sIBHKqtfi3Uf/fR191zUGWn
        gY49Rl1mnamx8XX3i5eC3C85Q3hcVebj9sXc87AP5qv2hliSa7A0Lzxm/iGNgkz7lg8+dgt8rkvqkrhx
        iZ8SG9DniTFbfaByoCVzGFsLviGmjAlL13qIlo0W/mwujW8f/oxTcLX6DeXfVJ/KH2xNPbP8GZ+zXx/H
        3uEsjb8Xq0NMWbcQlpKiLlw4fIOeukmyYXOotQ6c+sTadbCt/Vp95uI2/QByOCT7/AZ898Na5UP2mY/2
        9ViqzO2M6fbh8x/C4817v9QCsSEGrQtf68Clr7er/+6j+zH1knBS6NgOscA/5jd2EWWeQ0UaFxyfO5dl
        n39Rfbiceb6i4znjtlXm+dYXc+bQ5w8g07WdypJc6/NxDM9Fj4viMUS32ocupPis+bA0bsy7LzZAfMgp
        zz10PCeg5op/Qzbp14r5EGNjar+5az2E2sCu2675tHSXxreF58PQc+C5wLdjJRvzyf1hj/C+vMemtjFm
        6RR9+7UXfB4/lbldn5vKnKXx7/Pb25fsRSFMJUVd+FDCocPmClMOx/MCvpbfMPey8bCgcWAtW30U4vRh
        j9kY+kxAq48yJRdLdlrP2Nw5TGFurp0HNAZTfF4aN32uYMo6a/+Wb0tsjqH2huJxkmuttlvyFicRi6Pi
        PrX6FJVXGkstcFpFHegYvG71OQ3mxv+8+B0+vDSLulf3Dm49e3C3K+rup6gLIYQQQghHZkpRF0JYxvtF
        3f2rz3U13Ff3Dm5/Z2vr8sbXdt+68cLB3etPHN5/0KGlGEIIIYQQwlRS1IVwclCzUbtRw3W13M031usv
        bHxrZ+fySwfv3ugE157qhC3FEEIIIYQQpsLfqxX6P+EJIRwdajZqN2o4arnt9eqxjfVqdWlz/52XP3t4
        7/qTKepCCCGEEEII4dxCzfZ0V7td6Wq4rpZ7aXe1+sTGd9erT//r9u71L9559+bjb9+/msIuhBBCCCGE
        EM4fD76l62q2S13t9tr27o2d9eoz2+vVIxvdi4/urd58/us7b93+3J27N+iUv60LIYQQQgghhPPDg7+l
        62o1ajZqN2o4armuqNvYWK/XfFv3sf31my9+Y2fv1ufvfL8r7KgC28ZCCCGEEEIIIZwe1GbUaNRq/9jV
        bHvr1YvUcNRy8OA/sLVe/9zuevXct7e2b93aO7zxzMF7KexCCCGEEEII4QyhJqM2o0brarXbXc32fFe7
        /XzVcf+vqPuAj2ytV4/urFdfen29dfObO/vXXtk93Lyy/73NyyGEEEIIIYQQTgVqMGoxajJqs65G+0tq
        ta5me8RquB8r6oqf7PjFjsc6/rzjyx3XOjZDCCGEEEIIIZwo1F7UYNRi1GTUZtRojdptvfFDiiW0cnVS
        FzgAAAAASUVORK5CYII=
</value>
  </data>
</root>