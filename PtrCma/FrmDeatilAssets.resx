<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA3UAAAAfCAYAAABAieSBAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAOwwAADsMBx2+oZAAAENJJREFUeF7tncuPXEcV
        xvs/gIW94E+IxAYk2EQiEptsEHsMCCFAgJASJCf4EbIxtrGjCGJHEWEzwdPzkGfAzgYJBSIRwsIIglig
        IJHI7tvT6Rm7246c2DNiBfWNfaKTQ9163e7p2zPf4to9fR9VdepXVeerU3W7U1VVB8eGO/oPP7u/P+GO
        x9zxpDt+5o4Fdyy5o8uDNiADZIAMkAEyQAbIABkgA2SADEyVgUVn31+645w7nniozaDRdjUbtJvoOPz/
        0R8PRd2hftU7Mqh6L79T9VffHGwtXRmOu5e27nQXtt7nQRuQATJABsgAGSADZIAMkAEyQAb2gAFoMGgx
        aDJoM2g0aDUn6g7Vijp38jPDqnfq7f7G+trmePXU6H735Hi7+2MetAEZIANkgAyQATJABsgAGSADZGAm
        DECTQZtBo0GrQbNBu/1fpO69qvfoVnXj/BuDzbXnb32wcvz2NgUdoZ0JtJxE4EQKGSADZIAMkAEyQAbI
        ABn4OAMQdtBo0GrQbNBu0HAi7DoujPfIZq939vXB1vpztz50gm5n8RkKGgoaMkAGyAAZIANkgAyQATJA
        BshAaxiARoNWg2aDdoOGg5bbqHqdjlN4T/1tY7j80q27q8fcRSfGO63JOBU6Z2nIABkgA2SADJABMkAG
        yAAZIAMPGDjptBqE3UWn3a5tDFecqHvaibrDnarXu9jdunP52fH2MgUdGwwbDBkgA2RgLxj45re/OpTj
        uz89/U+dJv7W5/ciPyVpnLg+vPz9Fy/+/VtPfq8n+cXnH/3jX1dLnsd75q/thThmfU6nPttq8x+88qtr
        Om9H//yX35KB6TBAu253odlc1G7ZvUjlstNyF4a93uOdtwaDhQujuyvHxztLUH40FAFsEwPoII989lP/
        TTnakO+UfNpr4BS2Ie/TyMMPf/f7P+jyoj6nkc5+fmaIqa899un/wKYQQdMQEmBTDjgsk7RziAvb7ieZ
        7qSeBUH3ja98+bavfsB9Tjqw8X7pF1B2zc00uLS2nUWakoc292+YYLBc7Qeh0Vab23ac2w/k9Bm8lr76
        brTOaTdoOGg5F6k72nlteHP13OjesjsBxUdRRxu0igGKuvlukxR1zesvZ6IA4g5iY1ID/jSdp9Bs+zyI
        Otja2gdO3XeeOfbvXMf561/6woe2nvHdpOpxL58zC8d2Fmm2XdRBTPv6DvC5lzxMI622RupmyeE07Mxn
        Nh+/p2nD3b11TrtBw0HLXa+qFzpXN0frp0f3llwYjy9IoaBrlaBDY7DOHQYkPQusP0+z8aQ+2+YN+dUD
        Kxw1e81+ns2jqGs+KPgiOMKQb9ID0aNUXmPXTVPUhdKeB1Fn81gqpp9Y/82f6oQ7zsXqqG3nZ+HYziLN
        tos6O+mgGStltW2stS0/s+SwbbZgfpqP/TEbQtRBu51xGu5Vp+Xe7fcXOlc2x7/+yei+E3XbFHUUda0X
        dTkCCMvFsPwES9RkQIOogtDyPQez63oGEPfLnhn5PtbIfMuCch1jWZfvy7dvKZNv1lLKjnMSNfCt98d3
        egkZ7CW2QVqwlUQRkB/8neMQNBF1uFenDzsiD8hj3VJAKaONfITu89U70tZLl0SM59b/JK63Dr99JvJv
        lwH6lvRqlvUzcS+u1/UqdtTXyVJP2xbEVr6liLjWPlvy3yRSJ2naepalqLmRshzWhBfdPmEnKU/uMlXf
        EjmxO86FGPL1FVJPPruX2M13j7Qn24/CBrZOwIXPNnU84n6UO3VZek6asGVOXae0X9u/gw/0W8KH9B11
        /WaOfVPyI9dYPnU+Y7YVG9k2XdeeMfmgJzmkzKE2Hto36+uTddlznyvlwX22fZbYH3VpxybZV6vtnOOv
        5NQtr52+YJoHGz8QdduL0HDQcu/0+5co6ijkWifkbOed20miw01ZtmlfzuATIHZgzG3oOaImtEdHbID8
        WIfVRgLtQCwDi51FjA36dedz9sXllF/bNjTLLOVFPqyjlFLvdvmRzWPMLrkMNL0+JurEUbUCTKcLZkLl
        wr3gRuzp2+NVl4+Ua/WzUyIcoUidjX77olwxp7UJa5YXXyQ1tc7tEjmUzZbPN5GT0lcgX9qpLLFbyj3a
        SY4tFZZ6SeERz0qxY2qaeFZpvxLKh213dfnx9Zu59k2xB65Bneh84G8ttkNLe1PylMuVTHqExnZ9zrYx
        255DE6W277CTJvpZKWW1IjCVXdv+UuuO11GwpTJAUUcB12oB5wM5xUlH56k7ajtwS/QJs4lW8OjlTT5n
        DYOfzArCKU5tbHJdjqjRZUVaGExwP/63UTudD+tE6IgK8h8SdbAVbBeKsvgcodSXH+SUX8pkl6Mhb/jO
        Rs9QbivMYUOJ5OF6HCifFTQ6/756l2W+lr9Z7HNKEXWwna1DEf8QALr82p5WkIngFbvZCQPfcmfhB/+L
        zW0EGM+xzlGOYyZsWGdV2jbSBSPgISeqWsIa2EFZbURKbJMzO2/blthP28YyDltYZ9TaXiJFkpcSu1k2
        JA1fPyrtCdfYNqOXzEt+tO10XyfciSOe0t+mpllS1ynp2/YpUUbUm+139HhTYt+U/Ni+AHmQqKjOq29p
        r80T+go9DkndSj1am6Je9fUlbdw3SdVE1ImgRN5lVQLSKLW/7Wdl5Q9sYtnP6QtS65bXUfQJAxR1FHUH
        QtTpgcTuL8LgVjfQxGYHSzrTVFEDB9zOrIaiCVqUhAZO/YzQen8bMbCzytaJTB2sUssfmsG10Tg7qPrq
        BfeIo+9z+nT+Y/VunfdUDkIRhJxoZ6qoq3MobL1bQa7taUVrKlt6EkMcc5/wqJuMsPaoi9TZssCBhmNp
        y5Q66WDTyWEtFE1MYcSKbW17K3piEWkICNhdX4fPdZHXFLtpQWKj29aZ14I91M+IXWx0SwSjtltqHfoc
        dF//1KSuQ/UZaiPWTtqOpfaNsWX7M0kz1sfjuXby0LdkVLc3a1NbZ20QdXX2KrF/nW0ljRT2Y/XH8xRt
        qQxQ1FHUzb2oq3tRigziMQcdjaXOGUu5N7WxaSc3xTFOWcKmn6OdlpTnpzg+oeeUDlYloi5WnlBekF7d
        a+br7Ber91Lnfa9FXV2kLjXaLflNFV5yHRy50L4weW6T2XZJy05+WBv79syUOuSxNlPKheTHRs+0fSzj
        NsoZ6i98+91y7eaLXod4DuXdJ7BCvMi+50mLuib9ShOGfOk2sW9sDApNwIVEmM2TL0Js047ZtK2irtT+
        sXEwdj5WdzxPQZfDAEUdRd3ci7pYhCjmoM+LqNMvF5Dln/p/va8uNrCmziLOu6jzLQXCIIvvQ45OjJlS
        510vVbSfc16mkRKps067Xips8+/jSX+XI+rgeOsZb3yGM4jy+ZY3pT47ZHPUp+8nALSdUhxS5CXWdkJO
        WikXYoNYGXTefMt+kbfYPkm9xC7HbrZN6GXoPn5yI3XyoomQUETZUoVdijPdpK6nLepy7BvKS93PGNTZ
        WUcOY/2gL92YTedF1KXaP8ZZ7HyOw85rKfBiDFDUUdTte1FnBzXf2+PqNoyXDGqxRpcaqQrN2sfSiA2s
        8ybq7NIzW/66F0nY2X+9dCgW3dM2tBGlps57rP5i52OiLvb2y9KlsyWiJ7RHdRKROu3ko9xID8/1RX5i
        dsX5UtZCk0Mp6eZGCsCAntCye0JFRPveVoj85NotZaleXTlTHFvJjyyTxj2yHzLUFpuk2aSuS0WdnWyR
        yYYm9g3lJXfFh+y3E0ZSxhLkXfrW2DLhHFGn++vYWJzzXJ+9Su0fG6dT2E/pH3gNBV0KAxR1FHX7XtT5
        nC1xJn2zw9rRjA0kKY3MXpMq6uz+Ggy2yJt1xvBd6b6n2ICzF5E6eYmFL4olTqvNp/4ZBXtO78Wq21MG
        G4Y2sMfqvW2iTtvOt7Qy9nZP1AHEkHWicJ+dBNFM6MiJRIrronF4tn0JyCREnfCP/3W0GnWsBU3qS41K
        WWsq6nxv5AOH+rB503Uj0TI4mbaP0HUm95TYzbKF+rQ2lxfiaMFp8y1CBkxIXpFH8GY5jEV3U0WdL80m
        dZ0q6vQebt9ki7ZTqX1DebGRW8sU/g7tdbV5wrVagMtLu6Qc9ln6xUW2/dt9s7YN6Bea2XxMou+wdiux
        vxWD9oVmdW+eLvEdeA+FXYwBijqKugMh6uySsLqlJ/YlKjHnPtbAfOdTRR3uzXlVsk4rZXYV17dB1KXu
        y0nZF2eXZ9lZ1FBa2rmK1XvbRF2oXHXLDlNtE3O8dNq+2f3U+o1FAetsnhqJyFneWsJaE1FnHcPQG1Xt
        Ek1xsFP2SeqfPymxW+rPJtgoYmj/njjnIU7knO9nMOr64JQ0cW9pXaeKupy2WWrfurzYNm4nd+S+EH+p
        eZL+M3WshV1s35LaJ+HeaYi61LJavlN+FkM4iG0XKfEpeA/FnjBAUUdRdyBEHYCXqJxvz0ndK89jzn1J
        Z5oj6sRJlteR+xwEeYnAfhd1IkJ9+45Qpzp6p23hG3Bxre/V8XJfrN7bLOrk5ytQvtj+I5Qz9IIK/bpv
        sY38CLCPRbnG/uSGOHCxqEvJEiqUISRocK7EkZJIli1niLVSLmIRTM1zXdQL34cEio6w4HmldpNX4dft
        /5OXslj2kD9f3yvOOfIXeiau8715MdQHx9KUe0vqOlXUoUy2XLLqwveMUvv6npUTJbLs6mXTsTyhD7HR
        YVtmWQ0Qm3Cs669jyxxL+o5J2r9knCnxH3gPBVyIAYo6irq5E3WT6NTgmMoylJjjO4n0JvUM5FUvn8l1
        ciaVj1k/R9vB/vB63UAtdjuoNovVmW4TKSIohcW9bmO5ZYjZRCZVpBwprKU8c9rX6D4iJc+ldpP9bzn1
        HMtbyTNj9oylKffn9iuxdPV5/ezU+6Zhi9S0666zeQo9T7jKfYmXTmOW/XWu/duS76Z1zPvnVzh6Rd3V
        zdHa6dG9pRPjnUVcwAqmDcgAGSADZIAMkAEyQAaaMBCL1DV5Nu8lmwedgQeibmfxjNNwr26O1t/t9xc6
        rw1vrpwb3Vs+Pt7pUtSxkRz0RsLysw2QATJABsgAGWjOAEVdcxuSQ9qwjgFoNmg3aDin5VavV9ULnbcG
        g4ULo7sr7sTSSXeSABEgMkAGyAAZIANkgAyQgSYM6Df15ry8qEmavJfMHhQGoNmg3aDhoOU2qt7RTtXr
        Xexu3bn87Hh72YXxKOq4BJUMkAEyQAbIABkgA2SADJABMtBSBqDZXLRu+ZLTcE7LXRj2eo933qt6T/11
        Y7j84q27q8du7yxS2HGW46DMcrCcZJ0MkAEyQAbIABkgA2RgnhjYjdI5zXbRabdrG8OVQdV72kXqDnfc
        h0c2ezfOvj64uf7crXsruIh76wj3PMHNvJJXMkAGyAAZIANkgAyQgf3OwO5eOqfVoNmg3aDhoOWcqOt0
        qqpCtO7RrerG+TcGm2vP3/rACbvt7smWhhv3e2WxfOyQyAAZIANkgAyQATJABsgAGdAMQJtBo0Gr/dFp
        ts2qdx4aDloOx+4/OPpV9blh1Tvzdn9jbW1zvHJqdJ/CjsKWa6nJABkgA2SADJABMkAGyAAZmCEDEHTQ
        ZtBoTqutO8121mm3z4uO+5ioe/jloX7VO+LCeC+/U/VX3xxsLV0ZjruXtt7vLvCgDcgAGSADZIAMkAEy
        QAbIABkgA3vCADQYtBg0GbSZ02i/gFZzuu2wFnQ+USeRu0+6k190x1F3/Nwdr7hjyR1dHrQBGSADZIAM
        kAEyQAbIABkgA2RgqgxAe0GDQYtBk0GbQaN9tNJSf/4fiiW0cviqPrgAAAAASUVORK5CYII=
</value>
  </data>
</root>