<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictitle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAy0AAAAfCAYAAADqSiI9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADImlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJ
        RD0ieG1wLmlpZDo5NDExMTVDNURFNTAxMUU3QTAxODg1Nzk5NjM5OTM4NyIgeG1wTU06RG9jdW1lbnRJ
        RD0ieG1wLmRpZDo5NDExMTVDNkRFNTAxMUU3QTAxODg1Nzk5NjM5OTM4NyI+IDx4bXBNTTpEZXJpdmVk
        RnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjk0MTExNUMzREU1MDExRTdBMDE4ODU3OTk2Mzk5
        Mzg3IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjk0MTExNUM0REU1MDExRTdBMDE4ODU3OTk2Mzk5
        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
        xlvamwAAAABJRU5ErkJggg==
</value>
  </data>
</root>